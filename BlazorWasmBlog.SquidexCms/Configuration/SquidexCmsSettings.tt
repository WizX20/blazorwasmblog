<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="EnvDTE" #>
<#@ import namespace="EnvDTE" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ output extension=".cs" #>
<#
    IServiceProvider serviceProvider = (IServiceProvider)this.Host;
    DTE dte = serviceProvider.GetService(typeof(DTE)) as DTE;
    var solutionPath = Path.GetDirectoryName(dte.Solution.FullName);
    var templatePath = Host.TemplateFile.Replace(solutionPath, ".");

    var path = Host.ResolvePath("");
    var files = Directory.GetFiles(path, "*.json", SearchOption.AllDirectories);
#>
//------------------------------------------------------------------------------
// <auto-generated>
//  This code was generated by a tool.
//  For the template that generated the code please refer to:
//  <#= templatePath #>
//
//  Changes to this file may cause incorrect behavior and will be lost if
//  the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using BlazorWasmBlog.Core.Domain.Configuration;
using System.Diagnostics.CodeAnalysis;

namespace BlazorWasmBlog.SquidexCms.Configuration
{
    [ExcludeFromCodeCoverage]
    public class SquidexCmsSettings : IConfigurationSettings
    {
<#
    var defaultMethods = new List<string>();
    var developmentMethods = new List<string>();

    foreach (var file in files)
    {
        var methodName = Path.GetFileNameWithoutExtension(file).Replace(".", "_");
        if (methodName.EndsWith("_Development", StringComparison.OrdinalIgnoreCase))
        {
            defaultMethods.Add(methodName);
        }
        else
        {
            developmentMethods.Add(methodName);
        }
#>
        /// <summary>
        /// <#= file.Replace(path, "").Trim('\\') #>
        /// </summary>
        public static string <#= methodName #>
        {
            get
            {
                return @"<#= File.ReadAllText(file).Replace("\"", "\"\"") #>";
            }
        }
<# } #>
        
        public string GetSettings()
        {
            var settings = <#= string.Join(" + ", defaultMethods) #>;
            return settings;
        }

        public string GetDevelopmentSettings()
        {
            var settings = <#= string.Join(" + ", developmentMethods) #>;
            return settings;
        }

    }
}